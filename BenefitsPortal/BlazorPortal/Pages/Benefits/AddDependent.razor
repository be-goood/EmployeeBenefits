@page "/benefits/dependent/add"

@using BenefitsPortal.Domain.Models
@using BenefitsPortal.Domain.Interfaces
@inject IEBenefitsRepository eBenefitsRepository
@inject NavigationManager navigation

<h1>Add New Dependent</h1>

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="Name" class="control-label">FirstName</label>
                <input for="Name" class="form-control" @bind="@dependent.FirstName" />
            </div>
            <div class="form-group">
                <label asp-for="Designation" class="control-label">LastName</label>
                <input for="Designation" class="form-control" @bind="@dependent.LastName" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary" @onclick="@(async () => await Add())">Save</button>
                <button class="btn btn-light" @onclick="@Cancel">Cancel</button>
            </div>
        </form>
    </div>
</div>
<br />

@code {
    private Dependent dependent = new Dependent();
    ElementReference publisherNameTextBox;


    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
        });
        //eMedBenefits = await eBenefitsRepository.GetEmployeeMedBenefitsTestAsync();
    }

    private async Task Add()
    {
        await Task.Run(() =>
        {
        });
    }

    private async Task Cancel()
    {
        await Task.Run(() =>
        {
            navigation.NavigateTo("/benefits/Benefit", true);

        });
    }
}
