@page "/benefits/dependent/add/{employeeId}"

@using BenefitsPortal.Domain.Models
@using BenefitsPortal.Domain.Interfaces
@inject IDependentRepository dependentRepository
@inject NavigationManager navigation

<h1>Add New Dependent</h1>

<EditForm Model="@dependent" OnValidSubmit="@Add">
    @*<ValidationSummary />*@
    <DataAnnotationsValidator />

    <div class="col-12 row">
        <label class="col-2 font-weight-bold">First name :</label>
        <input @ref="publisherNameTextBox" class="form-control col-3" @bind="dependent.FirstName" placeholder="First name" />
        &nbsp;<ValidationMessage For="@(() => dependent.FirstName)" />
    </div>
    <br />
    <div class="col-12 row">
        <label class="col-2 font-weight-bold">Last name :</label>
        <input @ref="publisherNameTextBox" class="form-control col-3" @bind="dependent.LastName" placeholder="Last name" />
        &nbsp;<ValidationMessage For="@(() => dependent.LastName)" />
    </div>
    <br />
    <div class="col-12 row">
        <span class="col-2"></span>
        <button type="submit" class="form-control col-1 btn btn-primary">Add</button>
        @*<button type="submit" class="form-control col-1 btn btn-primary" @onclick="@(async () => await Add())">Add</button>*@
        <button type="submit" class="form-control col-1 btn btn-light" @onclick="@(async () => await Cancel())">Cancel</button>

    </div>

</EditForm>

<br />

@code {
    [Parameter]
    public string employeeId { get; set; }
    private AddDependentModel dependent = new AddDependentModel();
    ElementReference publisherNameTextBox;


    protected override async Task OnInitializedAsync()
    {
    }

    private async Task Add()
    {
        dependent.EmployeeId = Guid.Parse(employeeId);
        dependent.Ssn = "123-45-6789";
        dependent.Dob = new DateTime(2010, 1, 1);
        await dependentRepository.AddDependentAsync(dependent);
        navigation.NavigateTo("/benefits/Benefit", true);
    }

    private async Task Cancel()
    {
        await Task.Run(() =>
        {
            navigation.NavigateTo("/benefits/Benefit", true);
        });
    }
}
